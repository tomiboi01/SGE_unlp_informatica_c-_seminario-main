@page "/sdf/{Id:int?}"

@using SGE.Aplicacion
@using SGE.Aplicacion.Servicios
@inject NavigationManager Navigation
@using SGE.Repositorios
@rendermode InteractiveServer
@inject ManejarLogin manejarLogin
@inject CasoDeUsoUsuarioObtenerPorId casoDeUsoObtenerUsuario
@using SGE.Aplicacion.CasosDeUso;
@inject CasoDeUsoExpedienteConsultaTodos casoDeUsoExpedienteConsultaTodos
@inject IServicioAutorizacion ServicioAutorizacion

@if( Id==null ){

        <Inicio/>  
}
else{

    <MostrarExpedientes expedientes="expedientes" user = "user" />

<div class=container> 
    @foreach (List<Tramite> tramites in listaDeListas)
    {   
            <div class=margin >Expediente @tramites[0].ExpedienteId</div>
            <table class="table">
            <thead>
                    <tr>
                          <th>Contenido</th>
                             <th>Etiqueta</th>
                            <th>Fecha de creacion</th>
                           <th>fecha ultima modificacion</th>
                     </tr>
                                                                                       
            </thead>
     
        @foreach(Tramite tramite in tramites)
        {
           
            <tbody>
                 <tr>
                    <td>@tramite.Contenido</td>
                    <td>@tramite.Etiqueta</td>
                    <td>@tramite.FechaCreacion</td>
                    <td>@tramite.UsuarioUltModificacion</td>
                    @if(ServicioAutorizacion.PoseeElPermiso(user.Id,Permiso.TramiteBaja)){
                    <td> <button class="btn btn-danger" @onclick="() => EliminarTramite(tramite.Id)">Eliminar tramite </button> </td>}
                      else
                        {
                                <td>  
                                <div class="alert alert-danger" role="alert">
                                    <strong>No posee permiso para eliminar tramites</strong> 
                                </div> 
                            </td>
                        }
                    @if (ServicioAutorizacion.PoseeElPermiso(user.Id,Permiso.TramiteModificacion)){
                    <td> <button class="btn btn-warning" @onclick="() => ModificarTramite(tramite.Id)">Modificar tramite </button> </td>
}
                    else
                        {
                            <td>  
                                <div class="alert alert-danger" role="alert">
                                    <strong>No posee permiso para modificar tramites</strong> 
                                </div> 
                            </td>
                        }
                </tr>
            </tbody>
        }
    </table>   
     
}
</div>
}
@code {
    

    #nullable disable
    private Usuario user;
    private List<Expediente> expedientes;
    #nullable enable

    private List<List<Tramite>> listaDeListas = new List<List<Tramite>>();
    [Parameter]
    public int? Id { get; set; }

    private void Loggear(){
        Navigation.NavigateTo("/login");
    }
    private void Register(){
        Navigation.NavigateTo("/register");
    }
    private void Eliminar(int idexp){
        Navigation.NavigateTo($"/expediente/eliminar/{Id}/{idexp}");
    }

    private void Modificar(int idexp){
        Navigation.NavigateTo($"/expediente/modificar/{Id}/{idexp}");
    }



    protected override void OnInitialized(){
        
        try
        {
            if (Id != null)
            {
                user = casoDeUsoObtenerUsuario.Ejecutar(Id.Value);
                expedientes = casoDeUsoExpedienteConsultaTodos.Ejecutar();
            }
        }
            catch {
            }   


    }


    private void AlternarTramites(List<Tramite> tramites)
    {
        if(!listaDeListas.Contains(tramites)){
            listaDeListas.Add(tramites);
        }
        else{
            listaDeListas.Remove(tramites);
        }
    }

    private void EliminarTramite(int idTramite){
        Navigation.NavigateTo($"/tramite/eliminar/{Id}/{idTramite}");
    }
    private void ModificarTramite(int idTramite){
        Navigation.NavigateTo($"/tramite/modificar/{Id}/{idTramite}");
    }
    private void agregarTramite(int idExpediente){
        Navigation.NavigateTo($"/tramite/agregarTramite/{Id}/{idExpediente}");
    }

   
}

<style>
    td, th{
        text-align: center;
    }
    .margin {
        margin-top: 10px;
        margin-bottom: 10px;
        margin-left: 10px;
        margin-right: 10px;
    }
    .flex {
   display: flex;
   align-items: center;
}
</style>