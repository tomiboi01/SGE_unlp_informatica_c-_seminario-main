@page "/usuarios/modificar/{Id:int}/{idUsuario:int}"
@inject NavigationManager Navigation
@using SGE.Aplicacion
@inject CasoDeUsoUsuarioModificar casoDeUsoUsuarioModificar
@inject CasoDeUsoUsuarioObtenerPorId casoDeUsoUsuarioObtenerPorId
@inject NavigationManager Navigation
@rendermode InteractiveServer

<h2>
    <p>Modificando usuario con id: @idUsuario </p>
</h2>

<label>Nombre:</label>
<input type="text" placeholder="aux.Nombre" @bind="user.Nombre" />
<label>Apellido:</label>
<input type="text" placeholder="aux.Apellido" @bind="user.Apellido" />
<label>Correo electrónico:</label>
<input type="email" placeholder="aux.CorreoElectronico" @bind="user.CorreoElectronico" />
<label>Contraseña:</label>
<input type="password" @bind="user.Contraseña" />
@if (Id == 1)
{
    @if (idUsuario != 1)
    {
        <label> @per[0].ToString() </label>
        <input type="checkbox" @bind="user.Permisos[0]" />
        <label> @per[1].ToString() </label>
        <input type="checkbox" @bind="user.Permisos[1]" />
        <label> @per[2].ToString() </label>
        <input type="checkbox" @bind="user.Permisos[2]" />
        <label> @per[3].ToString() </label>
        <input type="checkbox" @bind="user.Permisos[3]" />
        <label> @per[4].ToString() </label>
        <input type="checkbox" @bind="user.Permisos[4]" />
        <label> @per[5].ToString() </label>
        <input type=" checkbox" @bind="user.Permisos[5]" />
    }
    else
    {
        <p> Usted tiene todos los permisos </p>
    }
}

<button type=" submit" @onclick="Modificar" class="btn btn-primary margin">Modificar</button>


@if (mensajeError != "")
{
    <div class="alert alert-danger margin" role="alert">
        <strong>Error!</strong> @mensajeError.
        <button type="button" class="close" @onclick="CerrarError">x</button>
    </div>
}
@code
{
    [Parameter]
    public int Id { get; set; }
    [Parameter]
    public int idUsuario { get; set; }
    Permiso[] per = Enum.GetValues(typeof(Permiso)).Cast<Permiso>().ToArray();
#nullable disable
    Usuario user;
    Usuario aux;
#nullable enable
    string mensajeError = "";
    private void CerrarError() => mensajeError = "";
    private void Modificar()
    {
        try
        {
            casoDeUsoUsuarioModificar.Ejecutar(user);
            if (Id == 1)
            {
                Navigation.NavigateTo($"/usuarios/{Id}");
            }
            else
            {
                Navigation.NavigateTo($"/{Id}");

            }
        }
        catch (Exception e)
        {
            mensajeError = e.Message;
        }
    }
    protected override void OnParametersSet()
    {
        user = casoDeUsoUsuarioObtenerPorId.Ejecutar(idUsuario);
        aux = user;

    }
}


<style>
    .margin {
        margin-bottom: 10px;
        margin-top: 30px;
        display: inline-block;

    }
</style>