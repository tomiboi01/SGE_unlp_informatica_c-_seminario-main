@page "/tramites/mostrarPorEtiqueta/{Id:int}"
@inject CasoDeUsoTramiteConsultaPorEtiqueta CasoDeUsoTramiteConsultaPorEtiqueta
@inject IServicioAutorizacion ServicioAutorizacion
@inject NavigationManager Navigation
@inject CasoDeUsoUsuarioObtenerPorId casoDeUsoObtenerUsuario
@rendermode InteractiveServer
@if (_usuarioExiste)
{
    <h3>Tramites por _etiqueta</h3>

    <select @bind="@_etiqueta">
        <option value="@EtiquetaTramite.EscritoPresentado">Escrito presentado</option>
        <option value="@EtiquetaTramite.PaseAEstudio">Pase a estudio</option>
        <option value="@EtiquetaTramite.Despacho"> Despacho</option>
        <option value="@EtiquetaTramite.Resolucion">Resolucion</option>
        <option value="@EtiquetaTramite.Notificacion">Notificación</option>
        <option value="@EtiquetaTramite.PaseAlArchivo">Pase al archivo</option>
    </select>
    <button class="btn btn-primary" @onclick="BuscarTramites">Buscar</button>
    @if (_tramites != null)
    {
        @foreach (Tramite tramite in _tramites)
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>Contenido</th>
                        <th>_etiqueta</th>
                        <th>Fecha de creación</th>
                        <th>Fecha ultima modificación</th>
                        <th>Usuario ultima modificación</th>
                    </tr>

                </thead>
                <tbody>
                    <tr>
                        <td>@tramite.Contenido</td>
                        <td>@tramite.Etiqueta</td>
                        <td>@tramite.FechaCreacion</td>
                        <td>@tramite.FechaUltModificacion</td>
                        <td>@tramite.UsuarioUltModificacion</td>
                        @if (ServicioAutorizacion.PoseeElPermiso(_user.Id, Permiso.TramiteBaja))
                        {
                            <td> <button class="btn btn-danger" @onclick="() => EliminarTramite(tramite.Id)">Eliminar tramite </button>
                            </td>
                        }
                        else
                        {
                            <td>
                                <div class="alert alert-danger" role="alert">
                                    <strong>No posee permiso para eliminar tramites</strong>
                                </div>
                            </td>
                        }
                        @if (ServicioAutorizacion.PoseeElPermiso(_user.Id, Permiso.TramiteModificacion))
                        {
                            <td> <button class="btn btn-warning" @onclick="() => ModificarTramite(tramite.Id)">Modificar tramite
                                </button>
                            </td>
                        }
                        else
                        {
                            <td>
                                <div class="alert alert-danger margin" role="alert">
                                    <strong>No posee permiso para modificar tramites</strong>
                                </div>
                            </td>
                        }
                    </tr>
                </tbody>
            </table>
        }
    }
}
else
{
    <div class="alert alert-danger" role="alert">
        <strong>Su número de usuario no es válido. Por favor regístrese o inicie sesión con un usuario válido</strong>
    </div>

}
@code {
    EtiquetaTramite _etiqueta;
    List<Tramite>? _tramites;
    [Parameter]
    public int Id { get; set; }
    Usuario _user = null!;
    bool _usuarioExiste = true;
    void BuscarTramites()
    {
        _tramites = CasoDeUsoTramiteConsultaPorEtiqueta.Ejecutar(_etiqueta);
    }
    void EliminarTramite(int IdTramite)
    {
        Navigation.NavigateTo($"/tramite/eliminar/{Id}/{IdTramite}");
    }
    void ModificarTramite(int IdTramite)
    {
        Navigation.NavigateTo($"/tramite/modificar/{Id}/{IdTramite}");
    }
    protected override void OnInitialized()
    {

        try
        {

            _user = casoDeUsoObtenerUsuario.Ejecutar(Id);

        }
        catch { _usuarioExiste = false; }
    }
}